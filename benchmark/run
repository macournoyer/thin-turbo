#!/usr/bin/env ruby
require File.dirname(__FILE__) + "/benchmarker"
require 'optparse'

MB = 1024 ** 2
CONCURRENCY_RANGE = [1, 10, 50]
WAIT_RANGE        = [1, 2, 3]
FILE_RANGE        = [1 * MB] #, 5 * MB , 10 * MB]

options = {
  :keep_alive    => false,
}
range  = nil
method = (ARGV[0] || :concurrency).to_sym

OptionParser.new do |opts|
  opts.banner = "Usage: #{$0} (concurrency|wait|upload|download) [options]"

  opts.on("-n NUM", "--requests", "Number of requests")         { |n| options[:requests] = n }
  opts.on("-r EVAL", "--range", "Range used to run benchmark")  { |r| range = eval("[#{r}]") }
  opts.on("-k", "--keep-alive", "Use persistent connections")   { options[:keep_alive] = true }
  
  opts.on_tail("-h", "--help", "Show this message")     { puts opts; exit }
end.parse!(ARGV)

unless range
  case method
  when :concurrency
    range = CONCURRENCY_RANGE
  when :wait
    range = WAIT_RANGE
  when :upload, :download
    range = FILE_RANGE
  end
end

puts Benchmarker.new(method, range, options).to_s(11)
